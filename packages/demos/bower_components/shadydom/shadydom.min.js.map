{"version":3,"file":"shadydom.min.js","sources":["utils.js","array-splice.js","tree.js","distributor.js","shady.js","innerHTML.js","element-mixin.js","patch.js","event-mixin.js","env.js"],"sourcesContent":["/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport let settings = window.ShadyDOM || {};\n\nsettings.hasNativeShadowDOM = Boolean(Element.prototype.attachShadow && Node.prototype.getRootNode);\n\nsettings.inUse = settings.force || !settings.hasNativeShadowDOM;\n\nexport function isShadyRoot(obj) {\n  return Boolean(obj.__localName === 'ShadyRoot');\n}\n\nlet p = Element.prototype;\nlet matches = p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\n  p.oMatchesSelector || p.webkitMatchesSelector;\n\nexport function matchesSelector(element, selector) {\n  return matches.call(element, selector);\n}\n\nfunction copyOwnProperty(name, source, target) {\n  let pd = Object.getOwnPropertyDescriptor(source, name);\n  if (pd) {\n    Object.defineProperty(target, name, pd);\n  }\n}\n\nexport function extend(target, source) {\n  if (target && source) {\n    let n$ = Object.getOwnPropertyNames(source);\n    for (let i=0, n; (i<n$.length) && (n=n$[i]); i++) {\n      copyOwnProperty(n, source, target);\n    }\n  }\n  return target || source;\n}\n\nexport function extendAll(target, ...sources) {\n  for (let i=0; i < sources.length; i++) {\n    extend(target, sources[i]);\n  }\n  return target;\n}\n\nexport function mixin(target, source) {\n  for (var i in source) {\n    target[i] = source[i];\n  }\n  return target;\n}\n\nlet setPrototypeOf = Object.setPrototypeOf || function(obj, proto) {\n  obj.__proto__ = proto;\n  return obj;\n}\n\nexport function patchPrototype(obj, mixin) {\n  let proto = Object.getPrototypeOf(obj);\n  if (!proto.hasOwnProperty('__patchProto')) {\n    let patchProto = Object.create(proto);\n    patchProto.__sourceProto = proto;\n    extend(patchProto, mixin);\n    proto.__patchProto = patchProto;\n  }\n  setPrototypeOf(obj, proto.__patchProto);\n}\n\nexport function unpatchPrototype(obj) {\n  if (obj.__sourceProto) {\n    setPrototypeOf(obj, obj.__sourceProto);\n  }\n}\n\nexport let common = {};\n\n// TODO(sorvell): actually rely on a real Promise polyfill...\nexport let promish;\nif (window.Promise) {\n  promish = Promise.resolve();\n} else {\n  promish = {\n    then: function(cb) {\n      let twiddle = document.createTextNode('');\n      let observer = new MutationObserver(function() {\n        observer.disconnect();\n        cb();\n      });\n      observer.observe(twiddle, {characterData: true});\n    }\n  }\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nfunction newSplice(index, removed, addedCount) {\n  return {\n    index: index,\n    removed: removed,\n    addedCount: addedCount\n  };\n}\n\nconst EDIT_LEAVE = 0;\nconst EDIT_UPDATE = 1;\nconst EDIT_ADD = 2;\nconst EDIT_DELETE = 3;\n\nlet ArraySplice = {\n\n  // Note: This function is *based* on the computation of the Levenshtein\n  // \"edit\" distance. The one change is that \"updates\" are treated as two\n  // edits - not one. With Array splices, an update is really a delete\n  // followed by an add. By retaining this, we optimize for \"keeping\" the\n  // maximum array items in the original array. For example:\n  //\n  //   'xxxx123' -> '123yyyy'\n  //\n  // With 1-edit updates, the shortest path would be just to update all seven\n  // characters. With 2-edit updates, we delete 4, leave 3, and add 4. This\n  // leaves the substring '123' intact.\n  calcEditDistances(current, currentStart, currentEnd,\n                              old, oldStart, oldEnd) {\n    // \"Deletion\" columns\n    let rowCount = oldEnd - oldStart + 1;\n    let columnCount = currentEnd - currentStart + 1;\n    let distances = new Array(rowCount);\n\n    // \"Addition\" rows. Initialize null column.\n    for (let i = 0; i < rowCount; i++) {\n      distances[i] = new Array(columnCount);\n      distances[i][0] = i;\n    }\n\n    // Initialize null row\n    for (let j = 0; j < columnCount; j++)\n      distances[0][j] = j;\n\n    for (let i = 1; i < rowCount; i++) {\n      for (let j = 1; j < columnCount; j++) {\n        if (this.equals(current[currentStart + j - 1], old[oldStart + i - 1]))\n          distances[i][j] = distances[i - 1][j - 1];\n        else {\n          let north = distances[i - 1][j] + 1;\n          let west = distances[i][j - 1] + 1;\n          distances[i][j] = north < west ? north : west;\n        }\n      }\n    }\n\n    return distances;\n  },\n\n  // This starts at the final weight, and walks \"backward\" by finding\n  // the minimum previous weight recursively until the origin of the weight\n  // matrix.\n  spliceOperationsFromEditDistances(distances) {\n    let i = distances.length - 1;\n    let j = distances[0].length - 1;\n    let current = distances[i][j];\n    let edits = [];\n    while (i > 0 || j > 0) {\n      if (i == 0) {\n        edits.push(EDIT_ADD);\n        j--;\n        continue;\n      }\n      if (j == 0) {\n        edits.push(EDIT_DELETE);\n        i--;\n        continue;\n      }\n      let northWest = distances[i - 1][j - 1];\n      let west = distances[i - 1][j];\n      let north = distances[i][j - 1];\n\n      let min;\n      if (west < north)\n        min = west < northWest ? west : northWest;\n      else\n        min = north < northWest ? north : northWest;\n\n      if (min == northWest) {\n        if (northWest == current) {\n          edits.push(EDIT_LEAVE);\n        } else {\n          edits.push(EDIT_UPDATE);\n          current = northWest;\n        }\n        i--;\n        j--;\n      } else if (min == west) {\n        edits.push(EDIT_DELETE);\n        i--;\n        current = west;\n      } else {\n        edits.push(EDIT_ADD);\n        j--;\n        current = north;\n      }\n    }\n\n    edits.reverse();\n    return edits;\n  },\n\n  /**\n   * Splice Projection functions:\n   *\n   * A splice map is a representation of how a previous array of items\n   * was transformed into a new array of items. Conceptually it is a list of\n   * tuples of\n   *\n   *   <index, removed, addedCount>\n   *\n   * which are kept in ascending index order of. The tuple represents that at\n   * the |index|, |removed| sequence of items were removed, and counting forward\n   * from |index|, |addedCount| items were added.\n   */\n\n  /**\n   * Lacking individual splice mutation information, the minimal set of\n   * splices can be synthesized given the previous state and final state of an\n   * array. The basic approach is to calculate the edit distance matrix and\n   * choose the shortest path through it.\n   *\n   * Complexity: O(l * p)\n   *   l: The length of the current array\n   *   p: The length of the old array\n   */\n  calcSplices(current, currentStart, currentEnd,\n                        old, oldStart, oldEnd) {\n    let prefixCount = 0;\n    let suffixCount = 0;\n    let splice;\n\n    let minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);\n    if (currentStart == 0 && oldStart == 0)\n      prefixCount = this.sharedPrefix(current, old, minLength);\n\n    if (currentEnd == current.length && oldEnd == old.length)\n      suffixCount = this.sharedSuffix(current, old, minLength - prefixCount);\n\n    currentStart += prefixCount;\n    oldStart += prefixCount;\n    currentEnd -= suffixCount;\n    oldEnd -= suffixCount;\n\n    if (currentEnd - currentStart == 0 && oldEnd - oldStart == 0)\n      return [];\n\n    if (currentStart == currentEnd) {\n      splice = newSplice(currentStart, [], 0);\n      while (oldStart < oldEnd)\n        splice.removed.push(old[oldStart++]);\n\n      return [ splice ];\n    } else if (oldStart == oldEnd)\n      return [ newSplice(currentStart, [], currentEnd - currentStart) ];\n\n    let ops = this.spliceOperationsFromEditDistances(\n        this.calcEditDistances(current, currentStart, currentEnd,\n                               old, oldStart, oldEnd));\n\n    splice = undefined;\n    let splices = [];\n    let index = currentStart;\n    let oldIndex = oldStart;\n    for (let i = 0; i < ops.length; i++) {\n      switch(ops[i]) {\n        case EDIT_LEAVE:\n          if (splice) {\n            splices.push(splice);\n            splice = undefined;\n          }\n\n          index++;\n          oldIndex++;\n          break;\n        case EDIT_UPDATE:\n          if (!splice)\n            splice = newSplice(index, [], 0);\n\n          splice.addedCount++;\n          index++;\n\n          splice.removed.push(old[oldIndex]);\n          oldIndex++;\n          break;\n        case EDIT_ADD:\n          if (!splice)\n            splice = newSplice(index, [], 0);\n\n          splice.addedCount++;\n          index++;\n          break;\n        case EDIT_DELETE:\n          if (!splice)\n            splice = newSplice(index, [], 0);\n\n          splice.removed.push(old[oldIndex]);\n          oldIndex++;\n          break;\n      }\n    }\n\n    if (splice) {\n      splices.push(splice);\n    }\n    return splices;\n  },\n\n  sharedPrefix(current, old, searchLength) {\n    for (let i = 0; i < searchLength; i++)\n      if (!this.equals(current[i], old[i]))\n        return i;\n    return searchLength;\n  },\n\n  sharedSuffix(current, old, searchLength) {\n    let index1 = current.length;\n    let index2 = old.length;\n    let count = 0;\n    while (count < searchLength && this.equals(current[--index1], old[--index2]))\n      count++;\n\n    return count;\n  },\n\n  calculateSplices(current, previous) {\n    return this.calcSplices(current, 0, current.length, previous, 0,\n                            previous.length);\n  },\n\n  equals(currentValue, previousValue) {\n    return currentValue === previousValue;\n  }\n\n};\n\nexport let calculateSplices = (current, previous) =>\n  ArraySplice.calculateSplices(current, previous);\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n// TODO(sorvell): circular (patch loads tree and tree loads patch)\n// for now this is stuck on `utils`\n//import {patchNode} from './patch'\nimport * as utils from './utils'\n\n// native add/remove\nlet nativeInsertBefore = Element.prototype.insertBefore;\nlet nativeAppendChild = Element.prototype.appendChild;\nlet nativeRemoveChild = Element.prototype.removeChild;\n\n/**\n * `tree` is a dom manipulation library used by ShadyDom to\n * manipulate composed and logical trees.\n */\nexport let tree = {\n\n  // sad but faster than slice...\n  arrayCopyChildNodes(parent) {\n    let copy=[], i=0;\n    for (let n=parent.firstChild; n; n=n.nextSibling) {\n      copy[i++] = n;\n    }\n    return copy;\n  },\n\n  arrayCopyChildren(parent) {\n    let copy=[], i=0;\n    for (let n=parent.firstElementChild; n; n=n.nextElementSibling) {\n      copy[i++] = n;\n    }\n    return copy;\n  },\n\n  arrayCopy(a$) {\n    let l = a$.length;\n    let copy = new Array(l);\n    for (let i=0; i < l; i++) {\n      copy[i] = a$[i];\n    }\n    return copy;\n  },\n\n  saveChildNodes(node) {\n    tree.Logical.saveChildNodes(node);\n    if (!tree.Composed.hasParentNode(node)) {\n      tree.Composed.saveComposedData(node);\n      //tree.Composed.saveParentNode(node);\n    }\n    tree.Composed.saveChildNodes(node);\n  }\n\n};\n\ntree.Logical = {\n\n  hasParentNode(node) {\n    return Boolean(node.__dom && node.__dom.parentNode);\n  },\n\n  hasChildNodes(node) {\n    return Boolean(node.__dom && node.__dom.childNodes !== undefined);\n  },\n\n  getChildNodes(node) {\n    // note: we're distinguishing here between undefined and false-y:\n    // hasChildNodes uses undefined check to see if this element has logical\n    // children; the false-y check indicates whether or not we should rebuild\n    // the cached childNodes array.\n    return this.hasChildNodes(node) ? this._getChildNodes(node) :\n      tree.Composed.getChildNodes(node);\n  },\n\n  _getChildNodes(node) {\n    if (!node.__dom.childNodes) {\n      node.__dom.childNodes = [];\n      for (let n=this.getFirstChild(node); n; n=this.getNextSibling(n)) {\n        node.__dom.childNodes.push(n);\n      }\n    }\n    return node.__dom.childNodes;\n  },\n\n  // NOTE: __dom can be created under 2 conditions: (1) an element has a\n  // logical tree, or (2) an element is in a logical tree. In case (1), the\n  // element will store firstChild/lastChild, and in case (2), the element\n  // will store parentNode, nextSibling, previousSibling. This means that\n  // the mere existence of __dom is not enough to know if the requested\n  // logical data is available and instead we do an explicit undefined check.\n  getParentNode(node) {\n    return node.__dom && node.__dom.parentNode !== undefined ?\n      node.__dom.parentNode : tree.Composed.getParentNode(node);\n  },\n\n  getFirstChild(node) {\n    return node.__dom && node.__dom.firstChild !== undefined ?\n      node.__dom.firstChild : tree.Composed.getFirstChild(node);\n  },\n\n  getLastChild(node) {\n    return node.__dom && node.__dom.lastChild  !== undefined ?\n      node.__dom.lastChild : tree.Composed.getLastChild(node);\n  },\n\n  getNextSibling(node) {\n    return node.__dom && node.__dom.nextSibling  !== undefined ?\n      node.__dom.nextSibling : tree.Composed.getNextSibling(node);\n  },\n\n  getPreviousSibling(node) {\n    return node.__dom && node.__dom.previousSibling  !== undefined ?\n      node.__dom.previousSibling : tree.Composed.getPreviousSibling(node);\n  },\n\n  getFirstElementChild(node) {\n    return node.__dom && node.__dom.firstChild !== undefined ?\n      this._getFirstElementChild(node) :\n      tree.Composed.getFirstElementChild(node);\n  },\n\n  _getFirstElementChild(node) {\n    let n = node.__dom.firstChild;\n    while (n && n.nodeType !== Node.ELEMENT_NODE) {\n      n = n.__dom.nextSibling;\n    }\n    return n;\n  },\n\n  getLastElementChild(node) {\n    return node.__dom && node.__dom.lastChild !== undefined ?\n      this._getLastElementChild(node) :\n      tree.Composed.getLastElementChild(node);\n  },\n\n  _getLastElementChild(node) {\n    let n = node.__dom.lastChild;\n    while (n && n.nodeType !== Node.ELEMENT_NODE) {\n      n = n.__dom.previousSibling;\n    }\n    return n;\n  },\n\n  getNextElementSibling(node) {\n    return node.__dom && node.__dom.nextSibling !== undefined ?\n      this._getNextElementSibling(node) :\n      tree.Composed.getNextElementSibling(node);\n  },\n\n  _getNextElementSibling(node) {\n    let n = node.__dom.nextSibling;\n    while (n && n.nodeType !== Node.ELEMENT_NODE) {\n      n = this.getNextSibling(n);\n    }\n    return n;\n  },\n\n  getPreviousElementSibling(node) {\n    return node.__dom && node.__dom.previousSibling !== undefined ?\n      this._getPreviousElementSibling(node) :\n      tree.Composed.getPreviousElementSibling(node);\n  },\n\n  _getPreviousElementSibling(node) {\n    let n = node.__dom.previousSibling;\n    while (n && n.nodeType !== Node.ELEMENT_NODE) {\n      n = this.getPreviousSibling(n);\n    }\n    return n;\n  },\n\n  // Capture the list of light children. It's important to do this before we\n  // start transforming the DOM into \"rendered\" state.\n  // Children may be added to this list dynamically. It will be treated as the\n  // source of truth for the light children of the element. This element's\n  // actual children will be treated as the rendered state once this function\n  // has been called.\n  saveChildNodes(node) {\n    if (!this.hasChildNodes(node)) {\n      node.__dom = node.__dom || {};\n      node.__dom.firstChild = node.firstChild;\n      node.__dom.lastChild = node.lastChild;\n      let c$ = node.__dom.childNodes = tree.arrayCopyChildNodes(node);\n      for (let i=0, n; (i<c$.length) && (n=c$[i]); i++) {\n        n.__dom = n.__dom || {};\n        n.__dom.parentNode = node;\n        n.__dom.nextSibling = c$[i+1] || null;\n        n.__dom.previousSibling = c$[i-1] || null;\n        utils.common.patchNode(n);\n      }\n    }\n  },\n\n  // TODO(sorvell): may need to patch saveChildNodes iff the tree has\n  // already been distributed.\n  // NOTE: ensure `node` is patched...\n  recordInsertBefore(node, container, ref_node) {\n    container.__dom.childNodes = null;\n    // handle document fragments\n    if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n      let c$ = tree.arrayCopyChildNodes(node);\n      for (let i=0; i < c$.length; i++) {\n        this._linkNode(c$[i], container, ref_node);\n      }\n      // cleanup logical dom in doc fragment.\n      node.__dom = node.__dom || {};\n      node.__dom.firstChild = node.__dom.lastChild = null;\n      node.__dom.childNodes = null;\n    } else {\n      this._linkNode(node, container, ref_node);\n    }\n  },\n\n  _linkNode(node, container, ref_node) {\n    utils.common.patchNode(node);\n    ref_node = ref_node || null;\n    node.__dom = node.__dom || {};\n    container.__dom = container.__dom || {};\n    if (ref_node) {\n      ref_node.__dom = ref_node.__dom || {};\n    }\n    // update ref_node.previousSibling <-> node\n    node.__dom.previousSibling = ref_node ? ref_node.__dom.previousSibling :\n      container.__dom.lastChild;\n    if (node.__dom.previousSibling) {\n      node.__dom.previousSibling.__dom.nextSibling = node;\n    }\n    // update node <-> ref_node\n    node.__dom.nextSibling = ref_node;\n    if (node.__dom.nextSibling) {\n      node.__dom.nextSibling.__dom.previousSibling = node;\n    }\n    // update node <-> container\n    node.__dom.parentNode = container;\n    if (ref_node) {\n      if (ref_node === container.__dom.firstChild) {\n        container.__dom.firstChild = node;\n      }\n    } else {\n      container.__dom.lastChild = node;\n      if (!container.__dom.firstChild) {\n        container.__dom.firstChild = node;\n      }\n    }\n    // remove caching of childNodes\n    container.__dom.childNodes = null;\n  },\n\n  recordRemoveChild(node, container) {\n    node.__dom = node.__dom || {};\n    container.__dom = container.__dom || {};\n    if (node === container.__dom.firstChild) {\n      container.__dom.firstChild = node.__dom.nextSibling;\n    }\n    if (node === container.__dom.lastChild) {\n      container.__dom.lastChild = node.__dom.previousSibling;\n    }\n    let p = node.__dom.previousSibling;\n    let n = node.__dom.nextSibling;\n    if (p) {\n      p.__dom = p.__dom || {};\n      p.__dom.nextSibling = n;\n    }\n    if (n) {\n      n.__dom = n.__dom || {};\n      n.__dom.previousSibling = p;\n    }\n    // When an element is removed, logical data is no longer tracked.\n    // Explicitly set `undefined` here to indicate this. This is disginguished\n    // from `null` which is set if info is null.\n    node.__dom.parentNode = node.__dom.previousSibling =\n      node.__dom.nextSibling = null;\n    // remove caching of childNodes\n    container.__dom.childNodes = null;\n  }\n\n}\n\n\n// TODO(sorvell): composed tree manipulation is made available\n// (1) to maninpulate the composed tree, and (2) to track changes\n// to the tree for optional patching pluggability.\ntree.Composed = {\n\n  hasParentNode(node) {\n    return Boolean(node.__dom && node.__dom.$parentNode !== undefined);\n  },\n\n  hasChildNodes(node) {\n    return Boolean(node.__dom && node.__dom.$childNodes !== undefined);\n  },\n\n  getChildNodes(node) {\n    return this.hasChildNodes(node) ? this._getChildNodes(node) :\n      (!node.__patched && tree.arrayCopy(node.childNodes));\n  },\n\n  _getChildNodes(node) {\n    if (!node.__dom.$childNodes) {\n      node.__dom.$childNodes = [];\n      for (let n=node.__dom.$firstChild; n; n=n.__dom.$nextSibling) {\n        node.__dom.$childNodes.push(n);\n      }\n    }\n    return node.__dom.$childNodes;\n  },\n\n  getComposedChildNodes(node) {\n    return node.__dom.$childNodes;\n  },\n\n  getParentNode(node) {\n    return this.hasParentNode(node) ? node.__dom.$parentNode :\n      (!node.__patched && node.parentNode);\n  },\n\n  getFirstChild(node) {\n    return node.__patched ? node.__dom.$firstChild : node.firstChild;\n  },\n\n  getLastChild(node) {\n    return node.__patched ? node.__dom.$lastChild : node.lastChild;\n  },\n\n  getNextSibling(node) {\n    return node.__patched ? node.__dom.$nextSibling : node.nextSibling;\n  },\n\n  getPreviousSibling(node) {\n    return node.__patched ? node.__dom.$previousSibling : node.previousSibling;\n  },\n\n  getFirstElementChild(node) {\n    return node.__patched ? this._getFirstElementChild(node) :\n      node.firstElementChild;\n  },\n\n  _getFirstElementChild(node) {\n    let n = node.__dom.$firstChild;\n    while (n && n.nodeType !== Node.ELEMENT_NODE) {\n      n = n.__dom.$nextSibling;\n    }\n    return n;\n  },\n\n  getLastElementChild(node) {\n    return node.__patched ? this._getLastElementChild(node) :\n      node.lastElementChild;\n  },\n\n  _getLastElementChild(node) {\n    let n = node.__dom.$lastChild;\n    while (n && n.nodeType !== Node.ELEMENT_NODE) {\n      n = n.__dom.$previousSibling;\n    }\n    return n;\n  },\n\n  getNextElementSibling(node) {\n    return node.__patched ? this._getNextElementSibling(node) :\n      node.nextElementSibling;\n  },\n\n  _getNextElementSibling(node) {\n    let n = node.__dom.$nextSibling;\n    while (n && n.nodeType !== Node.ELEMENT_NODE) {\n      n = this.getNextSibling(n);\n    }\n    return n;\n  },\n\n  getPreviousElementSibling(node) {\n    return node.__patched ? this._getPreviousElementSibling(node) :\n      node.previousElementSibling;\n  },\n\n  _getPreviousElementSibling(node) {\n    let n = node.__dom.$previousSibling;\n    while (n && n.nodeType !== Node.ELEMENT_NODE) {\n      n = this.getPreviousSibling(n);\n    }\n    return n;\n  },\n\n  saveChildNodes(node) {\n    if (!this.hasChildNodes(node)) {\n      node.__dom = node.__dom || {};\n      node.__dom.$firstChild = node.firstChild;\n      node.__dom.$lastChild = node.lastChild;\n      let c$ = node.__dom.$childNodes = tree.arrayCopyChildNodes(node);\n      for (let i=0, n; (i<c$.length) && (n=c$[i]); i++) {\n        this.saveComposedData(n);\n      }\n    }\n  },\n\n  saveComposedData(node) {\n    node.__dom = node.__dom || {};\n    if (node.__dom.$parentNode === undefined) {\n      node.__dom.$parentNode = node.parentNode;\n    }\n    if (node.__dom.$nextSibling === undefined) {\n      node.__dom.$nextSibling = node.nextSibling;\n    }\n    if (node.__dom.$previousSibling === undefined) {\n      node.__dom.$previousSibling = node.previousSibling;\n    }\n  },\n\n  recordInsertBefore(node, container, ref_node) {\n    container.__dom.$childNodes = null;\n    // handle document fragments\n    if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n      // TODO(sorvell): remember this for patching:\n      // the act of setting this info can affect patched nodes\n      // getters; therefore capture childNodes before patching.\n      for (let n=this.getFirstChild(node); n; n=this.getNextSibling(n)) {\n        this._linkNode(n, container, ref_node);\n      }\n    } else {\n      this._linkNode(node, container, ref_node);\n    }\n  },\n\n  _linkNode(node, container, ref_node) {\n    node.__dom = node.__dom || {};\n    container.__dom = container.__dom || {};\n    if (ref_node) {\n      ref_node.__dom = ref_node.__dom || {};\n    }\n    // update ref_node.previousSibling <-> node\n    node.__dom.$previousSibling = ref_node ? ref_node.__dom.$previousSibling :\n      container.__dom.$lastChild;\n    if (node.__dom.$previousSibling) {\n      node.__dom.$previousSibling.__dom.$nextSibling = node;\n    }\n    // update node <-> ref_node\n    node.__dom.$nextSibling = ref_node;\n    if (node.__dom.$nextSibling) {\n      node.__dom.$nextSibling.__dom.$previousSibling = node;\n    }\n    // update node <-> container\n    node.__dom.$parentNode = container;\n    if (ref_node) {\n      if (ref_node === container.__dom.$firstChild) {\n        container.__dom.$firstChild = node;\n      }\n    } else {\n      container.__dom.$lastChild = node;\n      if (!container.__dom.$firstChild) {\n        container.__dom.$firstChild = node;\n      }\n    }\n    // remove caching of childNodes\n    container.__dom.$childNodes = null;\n  },\n\n  recordRemoveChild(node, container) {\n    node.__dom = node.__dom || {};\n    container.__dom = container.__dom || {};\n    if (node === container.__dom.$firstChild) {\n      container.__dom.$firstChild = node.__dom.$nextSibling;\n    }\n    if (node === container.__dom.$lastChild) {\n      container.__dom.$lastChild = node.__dom.$previousSibling;\n    }\n    let p = node.__dom.$previousSibling;\n    let n = node.__dom.$nextSibling;\n    if (p) {\n      p.__dom = p.__dom || {};\n      p.__dom.$nextSibling = n;\n    }\n    if (n) {\n      n.__dom = n.__dom || {};\n      n.__dom.$previousSibling = p;\n    }\n    node.__dom.$parentNode = node.__dom.$previousSibling =\n      node.__dom.$nextSibling = null;\n    // remove caching of childNodes\n    container.__dom.$childNodes = null;\n  },\n\n  clearChildNodes(node) {\n    let c$ = this.getChildNodes(node);\n    for (let i=0, c; i < c$.length; i++) {\n      c = c$[i];\n      this.recordRemoveChild(c, node);\n      nativeRemoveChild.call(node, c)\n    }\n  },\n\n  saveParentNode(node) {\n    node.__dom = node.__dom || {};\n    node.__dom.$parentNode = node.parentNode;\n  },\n\n  insertBefore(parentNode, newChild, refChild) {\n    this.saveChildNodes(parentNode);\n    // remove from current location.\n    this._addChild(parentNode, newChild, refChild);\n    return nativeInsertBefore.call(parentNode, newChild, refChild || null);\n  },\n\n  appendChild(parentNode, newChild) {\n    this.saveChildNodes(parentNode);\n    this._addChild(parentNode, newChild);\n    return nativeAppendChild.call(parentNode, newChild);\n  },\n\n  removeChild(parentNode, node) {\n    let currentParent = this.getParentNode(node);\n    this.saveChildNodes(parentNode);\n    this._removeChild(parentNode, node);\n    if (currentParent === parentNode) {\n      return nativeRemoveChild.call(parentNode, node);\n    }\n  },\n\n  _addChild(parentNode, newChild, refChild) {\n    let isFrag = (newChild.nodeType === Node.DOCUMENT_FRAGMENT_NODE);\n    let oldParent = this.getParentNode(newChild);\n    if (oldParent) {\n      this._removeChild(oldParent, newChild);\n    }\n    if (isFrag) {\n      let c$ = this.getChildNodes(newChild);\n      for (let i=0; i < c$.length; i++) {\n        let c = c$[i];\n        // unlink document fragment children\n        this._removeChild(newChild, c);\n        this.recordInsertBefore(c, parentNode, refChild);\n      }\n    } else {\n      this.recordInsertBefore(newChild, parentNode, refChild);\n    }\n  },\n\n  _removeChild(parentNode, node) {\n    this.recordRemoveChild(node, parentNode);\n  }\n\n};\n\n// for testing...\nlet descriptors = {};\nexport function getNativeProperty(element, property) {\n  if (!descriptors[property]) {\n    descriptors[property] = Object.getOwnPropertyDescriptor(\n      HTMLElement.prototype, property) ||\n    Object.getOwnPropertyDescriptor(\n      Element.prototype, property) ||\n    Object.getOwnPropertyDescriptor(\n      Node.prototype, property);\n  }\n  return descriptors[property].get.call(element);\n}\n\n// for testing...\nfunction assertNative(element, property, tracked) {\n  let native = getNativeProperty(element, property);\n  if (native != tracked && element.__patched) {\n    window.console.warn('tracked', tracked, 'native', native);\n  }\n  return tracked;\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {tree} from './tree'\n\n// NOTE: normalize event contruction where necessary (IE11)\nlet NormalizedEvent = typeof Event === 'function' ? Event :\n  function(inType, params) {\n    params = params || {};\n    var e = document.createEvent('Event');\n    e.initEvent(inType, Boolean(params.bubbles), Boolean(params.cancelable));\n    return e;\n  };\n\nexport default class {\n\n  constructor(root) {\n    this.root = root;\n    this.insertionPointTag = 'slot';\n  }\n\n  getInsertionPoints() {\n    return this.root.querySelectorAll(this.insertionPointTag);\n  }\n\n  hasInsertionPoint() {\n    return Boolean(this.root._insertionPoints &&\n      this.root._insertionPoints.length);\n  }\n\n  isInsertionPoint(node) {\n    return node.localName && node.localName == this.insertionPointTag;\n  }\n\n  distribute() {\n    if (this.hasInsertionPoint()) {\n      return this.distributePool(this.root, this.collectPool());\n    }\n    return [];\n  }\n\n  // Gather the pool of nodes that should be distributed. We will combine\n  // these with the \"content root\" to arrive at the composed tree.\n  collectPool() {\n    return tree.arrayCopy(\n      tree.Logical.getChildNodes(this.root.host));\n  }\n\n  // perform \"logical\" distribution; note, no actual dom is moved here,\n  // instead elements are distributed into storage\n  // array where applicable.\n  distributePool(node, pool) {\n    let dirtyRoots = [];\n    let p$ = this.root._insertionPoints;\n    for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n      this.distributeInsertionPoint(p, pool);\n      // provoke redistribution on insertion point parents\n      // must do this on all candidate hosts since distribution in this\n      // scope invalidates their distribution.\n      // only get logical parent.\n      let parent = tree.Logical.getParentNode(p);\n      if (parent && parent.shadyRoot &&\n          this.hasInsertionPoint(parent.shadyRoot)) {\n        dirtyRoots.push(parent.shadyRoot);\n      }\n    }\n    for (let i=0; i < pool.length; i++) {\n      let p = pool[i];\n      if (p) {\n        p._assignedSlot = undefined;\n        // remove undistributed elements from physical dom.\n        let parent = tree.Composed.getParentNode(p);\n        if (parent) {\n          tree.Composed.removeChild(parent, p);\n        }\n      }\n    }\n    return dirtyRoots;\n  }\n\n  distributeInsertionPoint(insertionPoint, pool) {\n    let prevAssignedNodes = insertionPoint._assignedNodes;\n    if (prevAssignedNodes) {\n      this.clearAssignedSlots(insertionPoint, true);\n    }\n    insertionPoint._assignedNodes = [];\n    let needsSlotChange = false;\n    // distribute nodes from the pool that this selector matches\n    let anyDistributed = false;\n    for (let i=0, l=pool.length, node; i < l; i++) {\n      node=pool[i];\n      // skip nodes that were already used\n      if (!node) {\n        continue;\n      }\n      // distribute this node if it matches\n      if (this.matchesInsertionPoint(node, insertionPoint)) {\n        if (node.__prevAssignedSlot != insertionPoint) {\n          needsSlotChange = true;\n        }\n        this.distributeNodeInto(node, insertionPoint)\n        // remove this node from the pool\n        pool[i] = undefined;\n        // since at least one node matched, we won't need fallback content\n        anyDistributed = true;\n      }\n    }\n    // Fallback content if nothing was distributed here\n    if (!anyDistributed) {\n      let children = tree.Logical.getChildNodes(insertionPoint);\n      for (let j = 0, node; j < children.length; j++) {\n        node = children[j];\n        if (node.__prevAssignedSlot != insertionPoint) {\n          needsSlotChange = true;\n        }\n        this.distributeNodeInto(node, insertionPoint);\n      }\n    }\n    // we're already dirty if a node was newly added to the slot\n    // and we're also dirty if the assigned count decreased.\n    if (prevAssignedNodes) {\n      // TODO(sorvell): the tracking of previously assigned slots\n      // could instead by done with a Set and then we could\n      // avoid needing to iterate here to clear the info.\n      for (let i=0; i < prevAssignedNodes.length; i++) {\n        prevAssignedNodes[i].__prevAssignedSlot = null;\n      }\n      if (insertionPoint._assignedNodes.length < prevAssignedNodes.length) {\n        needsSlotChange = true;\n      }\n    }\n    this.setDistributedNodesOnInsertionPoint(insertionPoint);\n    if (needsSlotChange) {\n      this._fireSlotChange(insertionPoint);\n    }\n  }\n\n  clearAssignedSlots(slot, savePrevious) {\n    let n$ = slot._assignedNodes;\n    if (n$) {\n      for (let i=0; i < n$.length; i++) {\n        let n = n$[i];\n        if (savePrevious) {\n          n.__prevAssignedSlot = n._assignedSlot;\n        }\n        // only clear if it was previously set to this slot;\n        // this helps ensure that if the node has otherwise been distributed\n        // ignore it.\n        if (n._assignedSlot === slot) {\n          n._assignedSlot = null;\n        }\n      }\n    }\n  }\n\n  matchesInsertionPoint(node, insertionPoint) {\n    let slotName = insertionPoint.getAttribute('name');\n    slotName = slotName ? slotName.trim() : '';\n    let slot = node.getAttribute && node.getAttribute('slot');\n    slot = slot ? slot.trim() : '';\n    return (slot == slotName);\n  }\n\n  distributeNodeInto(child, insertionPoint) {\n    insertionPoint._assignedNodes.push(child);\n    child._assignedSlot = insertionPoint;\n  }\n\n  setDistributedNodesOnInsertionPoint(insertionPoint) {\n    let n$ = insertionPoint._assignedNodes;\n    insertionPoint._distributedNodes = [];\n    for (let i=0, n; (i<n$.length) && (n=n$[i]) ; i++) {\n      if (this.isInsertionPoint(n)) {\n        let d$ = n._distributedNodes;\n        if (d$) {\n          for (let j=0; j < d$.length; j++) {\n            insertionPoint._distributedNodes.push(d$[j]);\n          }\n        }\n      } else {\n        insertionPoint._distributedNodes.push(n$[i]);\n      }\n    }\n  }\n\n  _fireSlotChange(insertionPoint) {\n    // NOTE: cannot bubble correctly here so not setting bubbles: true\n    // Safari tech preview does not bubble but chrome does\n    // Spec says it bubbles (https://dom.spec.whatwg.org/#mutation-observers)\n    insertionPoint.dispatchEvent(new NormalizedEvent('slotchange'));\n    if (insertionPoint._assignedSlot) {\n      this._fireSlotChange(insertionPoint._assignedSlot);\n    }\n  }\n\n  isFinalDestination(insertionPoint) {\n    return !(insertionPoint._assignedSlot);\n  }\n\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {calculateSplices} from './array-splice'\nimport * as utils from './utils'\nimport {tree} from './tree'\nimport Distributor from './distributor'\n\n/**\n  Implements a pared down version of ShadowDOM's scoping, which is easy to\n  polyfill across browsers.\n*/\nexport class ShadyRoot {\n\n  constructor(host) {\n    if (!host) {\n      throw 'Must provide a host';\n    }\n    // NOTE: this strange construction is necessary because\n    // DocumentFragment cannot be subclassed on older browsers.\n    let frag = document.createDocumentFragment();\n    frag.__proto__ = ShadyFragmentMixin;\n    frag._init(host);\n    return frag;\n  }\n\n}\n\nlet ShadyMixin = {\n\n  _init(host) {\n    // NOTE: set a fake local name so this element can be\n    // distinguished from a DocumentFragment when patching.\n    // FF doesn't allow this to be `localName`\n    this.__localName = 'ShadyRoot';\n    // root <=> host\n    host.shadyRoot = this;\n    this.host = host;\n    // logical dom setup\n    tree.Logical.saveChildNodes(host);\n    tree.Logical.saveChildNodes(this);\n    // state flags\n    this._clean = true;\n    this._hasRendered = false;\n    this._distributor = new Distributor(this);\n    this.update();\n  },\n\n  // async render the \"top\" distributor (this is all that is needed to\n  // distribute this host).\n  update() {\n    // TODO(sorvell): instead the root should always be enqueued to helps record that it is dirty.\n    // Then, in `render`, the top most (in the distribution tree) \"dirty\" root should be rendered.\n    let distributionRoot = this._findDistributionRoot(this.host);\n    //console.log('update from', this.host, 'root', distributionRoot.host, distributionRoot._clean);\n    if (distributionRoot._clean) {\n      distributionRoot._clean = false;\n      enqueue(function() {\n        distributionRoot.render();\n      });\n    }\n  },\n\n  // TODO(sorvell): this may not return a shadowRoot (for example if the element is in a docFragment)\n  // this should only return a shadowRoot.\n  // returns the host that's the top of this host's distribution tree\n  _findDistributionRoot(element) {\n    let root = element.shadyRoot;\n    while (element && this._elementNeedsDistribution(element)) {\n      root = element.getRootNode();\n      element = root && root.host;\n    }\n    return root;\n  },\n\n  // Return true if a host's children includes\n  // an insertion point that selects selectively\n  _elementNeedsDistribution(element) {\n    let c$ = tree.Logical.getChildNodes(element);\n    for (let i=0, c; i < c$.length; i++) {\n      c = c$[i];\n      if (this._distributor.isInsertionPoint(c)) {\n        return element.getRootNode();\n      }\n    }\n  },\n\n  render() {\n    if (!this._clean) {\n      this._clean = true;\n      if (!this._skipUpdateInsertionPoints) {\n        this.updateInsertionPoints();\n      } else if (!this._hasRendered) {\n        this._insertionPoints = [];\n      }\n      this._skipUpdateInsertionPoints = false;\n      // TODO(sorvell): previous ShadyDom had a fast path here\n      // that would avoid distribution for initial render if\n      // no insertion points exist. We cannot currently do this because\n      // it relies on elements being in the physical shadowRoot element\n      // so that native methods will be used. The current append code\n      // simply provokes distribution in this case and does not put the\n      // nodes in the shadowRoot. This could be done but we'll need to\n      // consider if the special processing is worth the perf gain.\n      // if (!this._hasRendered && !this._insertionPoints.length) {\n      //   tree.Composed.clearChildNodes(this.host);\n      //   tree.Composed.appendChild(this.host, this);\n      // } else {\n      // logical\n      this.distribute();\n      // physical\n      this.compose();\n      this._hasRendered = true;\n    }\n  },\n\n  forceRender() {\n    this._clean = false;\n    this.render();\n  },\n\n  distribute() {\n    let dirtyRoots = this._distributor.distribute();\n    for (let i=0; i<dirtyRoots.length; i++) {\n      dirtyRoots[i].forceRender();\n    }\n  },\n\n  updateInsertionPoints() {\n    let i$ = this.__insertionPoints;\n    // if any insertion points have been removed, clear their distribution info\n    if (i$) {\n      for (let i=0, c; i < i$.length; i++) {\n        c = i$[i];\n        if (c.getRootNode() !== this) {\n          this._distributor.clearAssignedSlots(c);\n        }\n      }\n    }\n    i$ = this._insertionPoints = this._distributor.getInsertionPoints();\n    // ensure insertionPoints's and their parents have logical dom info.\n    // save logical tree info\n    // a. for shadyRoot\n    // b. for insertion points (fallback)\n    // c. for parents of insertion points\n    for (let i=0, c; i < i$.length; i++) {\n      c = i$[i];\n      tree.Logical.saveChildNodes(c);\n      tree.Logical.saveChildNodes(tree.Logical.getParentNode(c));\n    }\n  },\n\n  get _insertionPoints() {\n    if (!this.__insertionPoints) {\n      this.updateInsertionPoints();\n    }\n    return this.__insertionPoints || (this.__insertionPoints = []);\n  },\n\n  set _insertionPoints(insertionPoints) {\n    this.__insertionPoints = insertionPoints;\n  },\n\n  hasInsertionPoint() {\n    return this._distributor.hasInsertionPoint();\n  },\n\n  compose() {\n    // compose self\n    // note: it's important to mark this clean before distribution\n    // so that attachment that provokes additional distribution (e.g.\n    // adding something to your parentNode) works\n    this._composeTree();\n    // TODO(sorvell): See fast paths here in Polymer v1\n    // (these seem unnecessary)\n  },\n\n  // Reify dom such that it is at its correct rendering position\n  // based on logical distribution.\n  _composeTree() {\n    this._updateChildNodes(this.host, this._composeNode(this.host));\n    let p$ = this._insertionPoints || [];\n    for (let i=0, l=p$.length, p, parent; (i<l) && (p=p$[i]); i++) {\n      parent = tree.Logical.getParentNode(p);\n      if ((parent !== this.host) && (parent !== this)) {\n        this._updateChildNodes(parent, this._composeNode(parent));\n      }\n    }\n  },\n\n  // Returns the list of nodes which should be rendered inside `node`.\n  _composeNode(node) {\n    let children = [];\n    let c$ = tree.Logical.getChildNodes(node.shadyRoot || node);\n    for (let i = 0; i < c$.length; i++) {\n      let child = c$[i];\n      if (this._distributor.isInsertionPoint(child)) {\n        let distributedNodes = child._distributedNodes ||\n          (child._distributedNodes = []);\n        for (let j = 0; j < distributedNodes.length; j++) {\n          let distributedNode = distributedNodes[j];\n          if (this.isFinalDestination(child, distributedNode)) {\n            children.push(distributedNode);\n          }\n        }\n      } else {\n        children.push(child);\n      }\n    }\n    return children;\n  },\n\n  isFinalDestination(insertionPoint, node) {\n    return this._distributor.isFinalDestination(\n      insertionPoint, node);\n  },\n\n  // Ensures that the rendered node list inside `container` is `children`.\n  _updateChildNodes(container, children) {\n    let composed = tree.Composed.getChildNodes(container);\n    let splices = calculateSplices(children, composed);\n    // process removals\n    for (let i=0, d=0, s; (i<splices.length) && (s=splices[i]); i++) {\n      for (let j=0, n; (j < s.removed.length) && (n=s.removed[j]); j++) {\n        // check if the node is still where we expect it is before trying\n        // to remove it; this can happen if we move a node and\n        // then schedule its previous host for distribution resulting in\n        // the node being removed here.\n        if (tree.Composed.getParentNode(n) === container) {\n          tree.Composed.removeChild(container, n);\n        }\n        composed.splice(s.index + d, 1);\n      }\n      d -= s.addedCount;\n    }\n    // process adds\n    for (let i=0, s, next; (i<splices.length) && (s=splices[i]); i++) { //eslint-disable-line no-redeclare\n      next = composed[s.index];\n      for (let j=s.index, n; j < s.index + s.addedCount; j++) {\n        n = children[j];\n        tree.Composed.insertBefore(container, n, next);\n        // TODO(sorvell): is this splice strictly needed?\n        composed.splice(j, 0, n);\n      }\n    }\n  },\n\n  getInsertionPointTag() {\n    return this._distributor.insertionPointTag;\n  }\n\n}\n\nlet ShadyFragmentMixin = Object.create(DocumentFragment.prototype);\nutils.extend(ShadyFragmentMixin, ShadyMixin);\n\n// let needsUpgrade = window.CustomElements && !CustomElements.useNative;\n\n// function upgradeLogicalChildren(children) {\n//   if (needsUpgrade && children) {\n//     for (let i=0; i < children.length; i++) {\n//       CustomElements.upgrade(children[i]);\n//     }\n//   }\n// }\n\n// render enqueuer/flusher\nlet customElements = window.customElements;\nlet flushList = [];\nlet scheduled;\nlet flushCount = 0;\nlet flushMax = 100;\nexport function enqueue(callback) {\n  if (!scheduled) {\n    scheduled = true;\n    utils.promish.then(flush);\n  }\n  flushList.push(callback);\n}\n\nexport function flush() {\n  scheduled = false;\n  flushCount++;\n  while (flushList.length) {\n    flushList.shift()();\n  }\n  if (customElements && customElements.flush) {\n    customElements.flush();\n  }\n  // continue flushing after elements are upgraded...\n  const isFlushedMaxed = (flushCount > flushMax);\n  if (flushList.length && !isFlushedMaxed) {\n      flush();\n  }\n  flushCount = 0;\n  if (isFlushedMaxed) {\n    throw new Error('Loop detected in ShadyDOM distribution, aborting.')\n  }\n}\n\nflush.list = flushList;","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n// Cribbed from ShadowDOM polyfill\n// https://github.com/webcomponents/webcomponentsjs/blob/master/src/ShadowDOM/wrappers/HTMLElement.js#L28\n/////////////////////////////////////////////////////////////////////////////\n// innerHTML and outerHTML\n\n// http://www.whatwg.org/specs/web-apps/current-work/multipage/the-end.html#escapingString\nlet escapeAttrRegExp = /[&\\u00A0\"]/g;\nlet escapeDataRegExp = /[&\\u00A0<>]/g;\n\nfunction escapeReplace(c) {\n  switch (c) {\n    case '&':\n      return '&amp;';\n    case '<':\n      return '&lt;';\n    case '>':\n      return '&gt;';\n    case '\"':\n      return '&quot;';\n    case '\\u00A0':\n      return '&nbsp;';\n  }\n}\n\nfunction escapeAttr(s) {\n  return s.replace(escapeAttrRegExp, escapeReplace);\n}\n\nfunction escapeData(s) {\n  return s.replace(escapeDataRegExp, escapeReplace);\n}\n\nfunction makeSet(arr) {\n  let set = {};\n  for (let i = 0; i < arr.length; i++) {\n    set[arr[i]] = true;\n  }\n  return set;\n}\n\n// http://www.whatwg.org/specs/web-apps/current-work/#void-elements\nlet voidElements = makeSet([\n  'area',\n  'base',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'hr',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]);\n\nlet plaintextParents = makeSet([\n  'style',\n  'script',\n  'xmp',\n  'iframe',\n  'noembed',\n  'noframes',\n  'plaintext',\n  'noscript'\n]);\n\nexport function getOuterHTML(node, parentNode, composed) {\n  switch (node.nodeType) {\n    case Node.ELEMENT_NODE: {\n      let tagName = node.localName;\n      let s = '<' + tagName;\n      let attrs = node.attributes;\n      for (let i = 0, attr; (attr = attrs[i]); i++) {\n        s += ' ' + attr.name + '=\"' + escapeAttr(attr.value) + '\"';\n      }\n      s += '>';\n      if (voidElements[tagName]) {\n        return s;\n      }\n      return s + getInnerHTML(node, composed) + '</' + tagName + '>';\n    }\n    case Node.TEXT_NODE: {\n      let data = node.data;\n      if (parentNode && plaintextParents[parentNode.localName]) {\n        return data;\n      }\n      return escapeData(data);\n    }\n    case Node.COMMENT_NODE: {\n      return '<!--' + node.data + '-->';\n    }\n    default: {\n      window.console.error(node);\n      throw new Error('not implemented');\n    }\n  }\n}\n\nexport function getInnerHTML(node, composed) {\n  if (node.localName === 'template') {\n    node = node.content;\n  }\n  let s = '';\n  let c$ = composed ? composed(node) : node.childNodes;\n  for (let i=0, l=c$.length, child; (i<l) && (child=c$[i]); i++) {\n    s += getOuterHTML(child, node, composed);\n  }\n  return s;\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport * as utils from './utils'\nimport {getInnerHTML} from './innerHTML'\nimport {tree} from './tree'\n\nlet mixinImpl = {\n\n  // Try to add node. Record logical info, track insertion points, perform\n  // distribution iff needed. Return true if the add is handled.\n  addNode(container, node, ref_node) {\n    let ownerRoot = this.ownerShadyRootForNode(container);\n    if (ownerRoot) {\n      // optimization: special insertion point tracking\n      if (node.__noInsertionPoint && ownerRoot._clean) {\n        ownerRoot._skipUpdateInsertionPoints = true;\n      }\n      // note: we always need to see if an insertion point is added\n      // since this saves logical tree info; however, invalidation state\n      // needs\n      let ipAdded = this._maybeAddInsertionPoint(node, container, ownerRoot);\n      // invalidate insertion points IFF not already invalid!\n      if (ipAdded) {\n        ownerRoot._skipUpdateInsertionPoints = false;\n      }\n    }\n    if (tree.Logical.hasChildNodes(container)) {\n      tree.Logical.recordInsertBefore(node, container, ref_node);\n    }\n    // if not distributing and not adding to host, do a fast path addition\n    let handled = this._maybeDistribute(node, container, ownerRoot) ||\n      container.shadyRoot;\n    return handled;\n  },\n\n  // Try to remove node: update logical info and perform distribution iff\n  // needed. Return true if the removal has been handled.\n  // note that it's possible for both the node's host and its parent\n  // to require distribution... both cases are handled here.\n  removeNode(node) {\n    // important that we want to do this only if the node has a logical parent\n    let logicalParent = tree.Logical.hasParentNode(node) &&\n      tree.Logical.getParentNode(node);\n    let distributed;\n    let ownerRoot = this.ownerShadyRootForNode(node);\n    if (logicalParent) {\n      // distribute node's parent iff needed\n      distributed = this.maybeDistributeParent(node);\n      tree.Logical.recordRemoveChild(node, logicalParent);\n      // remove node from root and distribute it iff needed\n      if (ownerRoot && (this._removeDistributedChildren(ownerRoot, node) ||\n        logicalParent.localName === ownerRoot.getInsertionPointTag())) {\n        ownerRoot._skipUpdateInsertionPoints = false;\n        ownerRoot.update();\n      }\n    }\n    this._removeOwnerShadyRoot(node);\n    return distributed;\n  },\n\n\n  _scheduleObserver(node, addedNode, removedNode) {\n    let observer = node.__dom && node.__dom.observer;\n    if (observer) {\n      if (addedNode) {\n        observer.addedNodes.push(addedNode);\n      }\n      if (removedNode) {\n        observer.removedNodes.push(removedNode);\n      }\n      observer.schedule();\n    }\n  },\n\n  removeNodeFromParent(node, parent) {\n    if (parent) {\n      this._scheduleObserver(parent, null, node);\n      this.removeNode(node);\n    } else {\n      this._removeOwnerShadyRoot(node);\n    }\n  },\n\n  _hasCachedOwnerRoot(node) {\n    return Boolean(node.__ownerShadyRoot !== undefined);\n  },\n\n  getRootNode(node) {\n    if (!node || !node.nodeType) {\n      return;\n    }\n    let root = node.__ownerShadyRoot;\n    if (root === undefined) {\n      if (utils.isShadyRoot(node)) {\n        root = node;\n      } else {\n        let parent = tree.Logical.getParentNode(node);\n        root = parent ? this.getRootNode(parent) : node;\n      }\n      // memo-ize result for performance but only memo-ize\n      // result if node is in the document. This avoids a problem where a root\n      // can be cached while an element is inside a fragment.\n      // If this happens and we cache the result, the value can become stale\n      // because for perf we avoid processing the subtree of added fragments.\n      if (document.documentElement.contains(node)) {\n        node.__ownerShadyRoot = root;\n      }\n    }\n    return root;\n  },\n\n  ownerShadyRootForNode(node) {\n    let root = this.getRootNode(node);\n    if (utils.isShadyRoot(root)) {\n      return root;\n    }\n  },\n\n  _maybeDistribute(node, container, ownerRoot) {\n    // TODO(sorvell): technically we should check non-fragment nodes for\n    // <content> children but since this case is assumed to be exceedingly\n    // rare, we avoid the cost and will address with some specific api\n    // when the need arises.  For now, the user must call\n    // distributeContent(true), which updates insertion points manually\n    // and forces distribution.\n    let insertionPointTag = ownerRoot && ownerRoot.getInsertionPointTag() || '';\n    let fragContent = (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) &&\n      !node.__noInsertionPoint &&\n      insertionPointTag && node.querySelector(insertionPointTag);\n    let wrappedContent = fragContent &&\n      (tree.Logical.getParentNode(fragContent).nodeType !==\n      Node.DOCUMENT_FRAGMENT_NODE);\n    let hasContent = fragContent || (node.localName === insertionPointTag);\n    // There are 3 possible cases where a distribution may need to occur:\n    // 1. <content> being inserted (the host of the shady root where\n    //    content is inserted needs distribution)\n    // 2. children being inserted into parent with a shady root (parent\n    //    needs distribution)\n    // 3. container is an insertionPoint\n    if (hasContent || (container.localName === insertionPointTag)) {\n      if (ownerRoot) {\n        // note, insertion point list update is handled after node\n        // mutations are complete\n        ownerRoot.update();\n      }\n    }\n    let needsDist = this._nodeNeedsDistribution(container);\n    if (needsDist) {\n      container.shadyRoot.update();\n    }\n    // Return true when distribution will fully handle the composition\n    // Note that if a content was being inserted that was wrapped by a node,\n    // and the parent does not need distribution, return false to allow\n    // the nodes to be added directly, after which children may be\n    // distributed and composed into the wrapping node(s)\n    return needsDist || (hasContent && !wrappedContent);\n  },\n\n  /* note: parent argument is required since node may have an out\n  of date parent at this point; returns true if a <content> is being added */\n  _maybeAddInsertionPoint(node, parent, root) {\n    let added;\n    let insertionPointTag = root.getInsertionPointTag();\n    if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE &&\n      !node.__noInsertionPoint) {\n      let c$ = node.querySelectorAll(insertionPointTag);\n      for (let i=0, n, np, na; (i<c$.length) && (n=c$[i]); i++) {\n        np = tree.Logical.getParentNode(n);\n        // don't allow node's parent to be fragment itself\n        if (np === node) {\n          np = parent;\n        }\n        na = this._maybeAddInsertionPoint(n, np, root);\n        added = added || na;\n      }\n    } else if (node.localName === insertionPointTag) {\n      tree.Logical.saveChildNodes(parent);\n      tree.Logical.saveChildNodes(node);\n      added = true;\n    }\n    return added;\n  },\n\n  _nodeNeedsDistribution(node) {\n    return node && node.shadyRoot &&\n      node.shadyRoot.hasInsertionPoint();\n  },\n\n  _removeDistributedChildren(root, container) {\n    let hostNeedsDist;\n    let ip$ = root._insertionPoints;\n    for (let i=0; i<ip$.length; i++) {\n      let insertionPoint = ip$[i];\n      if (this._contains(container, insertionPoint)) {\n        let dc$ = insertionPoint.assignedNodes({flatten: true});\n        for (let j=0; j<dc$.length; j++) {\n          hostNeedsDist = true;\n          let node = dc$[j];\n          let parent = tree.Composed.getParentNode(node);\n          if (parent) {\n            tree.Composed.removeChild(parent, node);\n          }\n        }\n      }\n    }\n    return hostNeedsDist;\n  },\n\n  _contains(container, node) {\n    while (node) {\n      if (node == container) {\n        return true;\n      }\n      node = tree.Logical.getParentNode(node);\n    }\n  },\n\n  _removeOwnerShadyRoot(node) {\n    // optimization: only reset the tree if node is actually in a root\n    if (this._hasCachedOwnerRoot(node)) {\n      let c$ = tree.Logical.getChildNodes(node);\n      for (let i=0, l=c$.length, n; (i<l) && (n=c$[i]); i++) {\n        this._removeOwnerShadyRoot(n);\n      }\n    }\n    node.__ownerShadyRoot = undefined;\n  },\n\n  // TODO(sorvell): This will fail if distribution that affects this\n  // question is pending; this is expected to be exceedingly rare, but if\n  // the issue comes up, we can force a flush in this case.\n  firstComposedNode(insertionPoint) {\n    let n$ = insertionPoint.assignedNodes({flatten: true});\n    let root = this.getRootNode(insertionPoint);\n    for (let i=0, l=n$.length, n; (i<l) && (n=n$[i]); i++) {\n      // means that we're composed to this spot.\n      if (root.isFinalDestination(insertionPoint, n)) {\n        return n;\n      }\n    }\n  },\n\n  clearNode(node) {\n    while (node.firstChild) {\n      node.removeChild(node.firstChild);\n    }\n  },\n\n  maybeDistributeParent(node) {\n    let parent = tree.Logical.getParentNode(node);\n    if (this._nodeNeedsDistribution(parent)) {\n      parent.shadyRoot.update();\n      return true;\n    }\n  },\n\n  maybeDistributeAttributeChange(node, name) {\n    if (name === 'slot') {\n      this.maybeDistributeParent(node);\n    } else if (node.localName === 'slot' && name === 'name') {\n      let root = this.ownerShadyRootForNode(node);\n      if (root) {\n        root.update();\n      }\n    }\n  },\n\n  // NOTE: `query` is used primarily for ShadyDOM's querySelector impl,\n  // but it's also generally useful to recurse through the element tree\n  // and is used by Polymer's styling system.\n  query(node, matcher, halter) {\n    let list = [];\n    this._queryElements(tree.Logical.getChildNodes(node), matcher,\n      halter, list);\n    return list;\n  },\n\n  _queryElements(elements, matcher, halter, list) {\n    for (let i=0, l=elements.length, c; (i<l) && (c=elements[i]); i++) {\n      if (c.nodeType === Node.ELEMENT_NODE &&\n          this._queryElement(c, matcher, halter, list)) {\n        return true;\n      }\n    }\n  },\n\n  _queryElement(node, matcher, halter, list) {\n    let result = matcher(node);\n    if (result) {\n      list.push(node);\n    }\n    if (halter && halter(result)) {\n      return result;\n    }\n    this._queryElements(tree.Logical.getChildNodes(node), matcher,\n      halter, list);\n  },\n\n  activeElementForNode(node) {\n    let active = document.activeElement;\n    if (!active) {\n      return null;\n    }\n    let isShadyRoot = !!(utils.isShadyRoot(node));\n    if (node !== document) {\n      // If this node isn't a document or shady root, then it doesn't have\n      // an active element.\n      if (!isShadyRoot) {\n        return null;\n      }\n      // If this shady root's host is the active element or the active\n      // element is not a descendant of the host (in the composed tree),\n      // then it doesn't have an active element.\n      if (node.host === active ||\n          !node.host.contains(active)) {\n        return null;\n      }\n    }\n    // This node is either the document or a shady root of which the active\n    // element is a (composed) descendant of its host; iterate upwards to\n    // find the active element's most shallow host within it.\n    let activeRoot = this.ownerShadyRootForNode(active);\n    while (activeRoot && activeRoot !== node) {\n      active = activeRoot.host;\n      activeRoot = this.ownerShadyRootForNode(active);\n    }\n    if (node === document) {\n      // This node is the document, so activeRoot should be null.\n      return activeRoot ? null : active;\n    } else {\n      // This node is a non-document shady root, and it should be\n      // activeRoot.\n      return activeRoot === node ? active : null;\n    }\n  }\n\n};\n\nlet nativeCloneNode = Element.prototype.cloneNode;\nlet nativeImportNode = Document.prototype.importNode;\nlet nativeSetAttribute = Element.prototype.setAttribute;\nlet nativeRemoveAttribute = Element.prototype.removeAttribute;\n\nexport let setAttribute = function(attr, value) {\n  // avoid scoping elements in non-main document to avoid template documents\n  if (window.ShadyCSS && attr === 'class' && this.ownerDocument === document) {\n    window.ShadyCSS.setElementClass(this, value);\n  } else {\n    nativeSetAttribute.call(this, attr, value);\n  }\n}\n\nlet NodeMixin = {};\n\nObject.defineProperties(NodeMixin, {\n\n  parentElement: {\n    get() {\n      return tree.Logical.getParentNode(this);\n    },\n    configurable: true\n  },\n\n  parentNode: {\n    get() {\n      return tree.Logical.getParentNode(this);\n    },\n    configurable: true\n  },\n\n  nextSibling: {\n    get() {\n      return tree.Logical.getNextSibling(this);\n    },\n    configurable: true\n  },\n\n  previousSibling: {\n    get() {\n      return tree.Logical.getPreviousSibling(this);\n    },\n    configurable: true\n  },\n\n  nextElementSibling: {\n    get() {\n      return tree.Logical.getNextElementSibling(this);\n    },\n    configurable: true\n  },\n\n  previousElementSibling: {\n    get() {\n      return tree.Logical.getPreviousElementSibling(this);\n    },\n    configurable: true\n  },\n\n  assignedSlot: {\n    get() {\n      return this._assignedSlot;\n    },\n    configurable: true\n  }\n});\n\nlet FragmentMixin = {\n\n  appendChild(node) {\n    return this.insertBefore(node);\n  },\n\n  // cases in which we may not be able to just do standard native call\n  // 1. container has a shadyRoot (needsDistribution IFF the shadyRoot\n  // has an insertion point)\n  // 2. container is a shadyRoot (don't distribute, instead set\n  // container to container.host.\n  // 3. node is <content> (host of container needs distribution)\n  insertBefore(node, ref_node) {\n    if (ref_node && tree.Logical.getParentNode(ref_node) !== this) {\n      throw Error('The ref_node to be inserted before is not a child ' +\n        'of this node');\n    }\n    // remove node from its current position iff it's in a tree.\n    if (node.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {\n      let parent = tree.Logical.getParentNode(node);\n      mixinImpl.removeNodeFromParent(node, parent);\n    }\n    if (!mixinImpl.addNode(this, node, ref_node)) {\n      if (ref_node) {\n        // if ref_node is an insertion point replace with first distributed node\n        let root = mixinImpl.ownerShadyRootForNode(ref_node);\n        if (root) {\n          ref_node = ref_node.localName === root.getInsertionPointTag() ?\n            mixinImpl.firstComposedNode(ref_node) : ref_node;\n        }\n      }\n      // if adding to a shadyRoot, add to host instead\n      let container = utils.isShadyRoot(this) ?\n        this.host : this;\n      if (ref_node) {\n        tree.Composed.insertBefore(container, node, ref_node);\n      } else {\n        tree.Composed.appendChild(container, node);\n      }\n    }\n    mixinImpl._scheduleObserver(this, node);\n    return node;\n  },\n\n  /**\n    Removes the given `node` from the element's `lightChildren`.\n    This method also performs dom composition.\n  */\n  removeChild(node) {\n    if (tree.Logical.getParentNode(node) !== this) {\n      throw Error('The node to be removed is not a child of this node: ' +\n        node);\n    }\n    if (!mixinImpl.removeNode(node)) {\n      // if removing from a shadyRoot, remove form host instead\n      let container = utils.isShadyRoot(this) ?\n        this.host :\n        this;\n      // not guaranteed to physically be in container; e.g.\n      // undistributed nodes.\n      let parent = tree.Composed.getParentNode(node);\n      if (container === parent) {\n        tree.Composed.removeChild(container, node);\n      }\n    }\n    mixinImpl._scheduleObserver(this, null, node);\n    return node;\n  },\n\n  replaceChild(node, ref_node) {\n    this.insertBefore(node, ref_node);\n    this.removeChild(ref_node);\n    return node;\n  },\n\n  // TODO(sorvell): consider doing native QSA and filtering results.\n  querySelector(selector) {\n    // match selector and halt on first result.\n    let result = mixinImpl.query(this, function(n) {\n      return utils.matchesSelector(n, selector);\n    }, function(n) {\n      return Boolean(n);\n    })[0];\n    return result || null;\n  },\n\n  querySelectorAll(selector) {\n    return mixinImpl.query(this, function(n) {\n      return utils.matchesSelector(n, selector);\n    });\n  },\n\n  cloneNode(deep) {\n    if (this.localName == 'template') {\n      return nativeCloneNode.call(this, deep);\n    } else {\n      let n = nativeCloneNode.call(this, false);\n      if (deep) {\n        let c$ = this.childNodes;\n        for (let i=0, nc; i < c$.length; i++) {\n          nc = c$[i].cloneNode(true);\n          n.appendChild(nc);\n        }\n      }\n      return n;\n    }\n  },\n\n  importNode(externalNode, deep) {\n    // for convenience use this node's ownerDoc if the node isn't a document\n    let doc = this instanceof Document ? this :\n      this.ownerDocument;\n    let n = nativeImportNode.call(doc, externalNode, false);\n    if (deep) {\n      let c$ = tree.Logical.getChildNodes(externalNode);\n      utils.common.patchNode(n);\n      for (let i=0, nc; i < c$.length; i++) {\n        nc = doc.importNode(c$[i], true);\n        n.appendChild(nc);\n      }\n    }\n    return n;\n  }\n};\n\nObject.defineProperties(FragmentMixin, {\n\n  childNodes: {\n    get() {\n      let c$ = tree.Logical.getChildNodes(this);\n      return Array.isArray(c$) ? c$ : tree.arrayCopyChildNodes(this);\n    },\n    configurable: true\n  },\n\n  children: {\n    get() {\n      if (tree.Logical.hasChildNodes(this)) {\n        return Array.prototype.filter.call(this.childNodes, function(n) {\n          return (n.nodeType === Node.ELEMENT_NODE);\n        });\n      } else {\n        return tree.arrayCopyChildren(this);\n      }\n    },\n    configurable: true\n  },\n\n  firstChild: {\n    get() {\n      return tree.Logical.getFirstChild(this);\n    },\n    configurable: true\n  },\n\n  lastChild: {\n    get() {\n      return tree.Logical.getLastChild(this);\n    },\n    configurable: true\n  },\n\n  firstElementChild: {\n    get() {\n      return tree.Logical.getFirstElementChild(this);\n    },\n    configurable: true\n  },\n\n  lastElementChild: {\n    get() {\n      return tree.Logical.getLastElementChild(this);\n    },\n    configurable: true\n  },\n\n  // TODO(srovell): strictly speaking fragments do not have textContent\n  // or innerHTML but ShadowRoots do and are not easily distinguishable.\n  // textContent / innerHTML\n  textContent: {\n    get() {\n      if (this.childNodes) {\n        let tc = [];\n        for (let i = 0, cn = this.childNodes, c; (c = cn[i]); i++) {\n          if (c.nodeType !== Node.COMMENT_NODE) {\n            tc.push(c.textContent);\n          }\n        }\n        return tc.join('');\n      }\n      return '';\n    },\n    set(text) {\n      mixinImpl.clearNode(this);\n      if (text) {\n        this.appendChild(document.createTextNode(text));\n      }\n    },\n    configurable: true\n  },\n\n  innerHTML: {\n    get() {\n      return getInnerHTML(this);\n    },\n    set(text) {\n      mixinImpl.clearNode(this);\n      let d = document.createElement('div');\n      d.innerHTML = text;\n      // here, appendChild may move nodes async so we cannot rely\n      // on node position when copying\n      let c$ = tree.arrayCopyChildNodes(d);\n      for (let i=0; i < c$.length; i++) {\n        this.appendChild(c$[i]);\n      }\n    },\n    configurable: true\n  }\n\n});\n\nlet ElementMixin = {\n\n  // TODO(sorvell): should only exist on <slot>\n  assignedNodes(options) {\n    return (options && options.flatten ? this._distributedNodes :\n      this._assignedNodes) || [];\n  },\n\n\n  setAttribute(name, value) {\n    setAttribute.call(this, name, value);\n    mixinImpl.maybeDistributeAttributeChange(this, name);\n  },\n\n  removeAttribute(name) {\n    nativeRemoveAttribute.call(this, name);\n    mixinImpl.maybeDistributeAttributeChange(this, name);\n  }\n\n};\n\nObject.defineProperties(ElementMixin, {\n\n  shadowRoot: {\n    get() {\n      return this.shadyRoot;\n    }\n  },\n\n  slot: {\n    get() {\n      return this.getAttribute('slot');\n    },\n    set(value) {\n      this.setAttribute('slot', value);\n    }\n  }\n\n});\n\nlet activeElementDescriptor = {\n  get() {\n    return mixinImpl.activeElementForNode(this);\n  }\n}\n\nlet ActiveElementMixin = {};\nObject.defineProperties(ActiveElementMixin, {\n  activeElement: activeElementDescriptor\n});\n\nlet UnderActiveElementMixin = {};\nObject.defineProperties(UnderActiveElementMixin, {\n  _activeElement: activeElementDescriptor\n});\n\nexport let Mixins = {\n\n  Node: utils.extendAll({__patched: 'Node'}, NodeMixin),\n\n  Fragment: utils.extendAll({__patched: 'Fragment'},\n    NodeMixin, FragmentMixin, ActiveElementMixin),\n\n  Element: utils.extendAll({__patched: 'Element'},\n    NodeMixin, FragmentMixin, ElementMixin, ActiveElementMixin),\n\n  // Note: activeElement cannot be patched on document!\n  Document: utils.extendAll({__patched: 'Document'},\n    NodeMixin, FragmentMixin, ElementMixin, UnderActiveElementMixin)\n\n};\n\nexport let getRootNode = function(node) {\n  return mixinImpl.getRootNode(node);\n}\n\nexport function filterMutations(mutations, target) {\n  const targetRootNode = getRootNode(target);\n  return mutations.map(function(mutation) {\n    const mutationInScope = (targetRootNode === getRootNode(mutation.target));\n    if (mutationInScope && mutation.addedNodes) {\n      let nodes = Array.from(mutation.addedNodes).filter(function(n) {\n        return (targetRootNode === getRootNode(n));\n      });\n      if (nodes.length) {\n        mutation = Object.create(mutation);\n        Object.defineProperty(mutation, 'addedNodes', {\n          value: nodes,\n          configurable: true\n        });\n        return mutation;\n      }\n    } else if (mutationInScope) {\n      return mutation;\n    }\n  }).filter(function(m) { return m});\n}\n\n// const promise = Promise.resolve();\n\nclass AsyncObserver {\n\n  constructor() {\n    this._scheduled = false;\n    this.addedNodes = [];\n    this.removedNodes = [];\n    this.callbacks = new Set();\n  }\n\n  schedule() {\n    if (!this._scheduled) {\n      this._scheduled = true;\n      utils.promish.then(() => {\n        this.flush();\n      });\n    }\n  }\n\n  flush() {\n    if (this._scheduled) {\n      this._scheduled = false;\n      let mutations = this.takeRecords();\n      if (mutations.length) {\n        this.callbacks.forEach(function(cb) {\n          cb(mutations);\n        });\n      }\n    }\n  }\n\n  takeRecords() {\n    if (this.addedNodes.length || this.removedNodes.length) {\n      let mutations = [{\n        addedNodes: this.addedNodes,\n        removedNodes: this.removedNodes\n      }];\n      this.addedNodes = [];\n      this.removedNodes = [];\n      return mutations;\n    }\n    return [];\n  }\n\n}\n\nexport let getComposedInnerHTML = function(node) {\n  if (utils.common.isNodePatched(node)) {\n    return getInnerHTML(node, function(n) {\n      return tree.Composed.getChildNodes(n);\n    })\n  } else {\n    return node.innerHTML;\n  }\n}\n\nexport let getComposedChildNodes = function(node) {\n  return utils.common.isNodePatched(node) ?\n    tree.Composed.getChildNodes(node) :\n    node.childNodes;\n}\n\n// TODO(sorvell): consider instead polyfilling MutationObserver\n// directly so that users do not have to fork their code.\n// Supporting the entire api may be challenging: e.g. filtering out\n// removed nodes in the wrong scope and seeing non-distributing\n// subtree child mutations.\nexport let observeChildren = function(node, callback) {\n  utils.common.patchNode(node);\n  if (!node.__dom.observer) {\n    node.__dom.observer = new AsyncObserver();\n  }\n  node.__dom.observer.callbacks.add(callback);\n  let observer = node.__dom.observer;\n  return {\n    _callback: callback,\n    _observer: observer,\n    _node: node,\n    takeRecords() {\n      return observer.takeRecords()\n    }\n  };\n}\n\nexport let unobserveChildren = function(handle) {\n  let observer = handle && handle._observer;\n  if (observer) {\n    observer.callbacks.delete(handle._callback);\n    if (!observer.callbacks.size) {\n      handle._node.__dom.observer = null;\n    }\n  }\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Patches elements that interacts with ShadyDOM\n * such that tree traversal and mutation apis act like they would under\n * ShadowDOM.\n *\n * This import enables seemless interaction with ShadyDOM powered\n * custom elements, enabling better interoperation with 3rd party code,\n * libraries, and frameworks that use DOM tree manipulation apis.\n */\n\n'use strict';\nimport {tree} from './tree'\nimport * as utils from './utils'\nimport {Mixins} from './element-mixin'\n\nexport let patchedCount = 0;\n\nlet log = false;\n\nlet patchImpl = {\n\n  canPatchNode: function(node) {\n    switch (node) {\n      case document.head:\n      case document.documentElement:\n        return false;\n      default:\n        return true;\n    }\n  },\n\n  hasPrototypeDescriptors: Boolean(Object.getOwnPropertyDescriptor(\n    window.Node.prototype, 'textContent')),\n\n  patch: function(node) {\n    patchedCount++;\n    log && window.console.warn('patch node', node);\n    if (this.hasPrototypeDescriptors) {\n      utils.patchPrototype(node, this.mixinForObject(node));\n    } else {\n      window.console.warn('Patching instance rather than prototype', node);\n      utils.extend(node, this.mixinForObject(node));\n    }\n  },\n\n  mixinForObject: function(obj) {\n    switch (obj.nodeType) {\n      case Node.ELEMENT_NODE:\n        return Mixins.Element;\n      case Node.DOCUMENT_FRAGMENT_NODE:\n        return Mixins.Fragment;\n      case Node.DOCUMENT_NODE:\n        return Mixins.Document;\n      case Node.TEXT_NODE:\n      case Node.COMMENT_NODE:\n        return Mixins.Node;\n    }\n  },\n\n  unpatch: function(obj) {\n    if (obj.__sourceProto) {\n      obj.__proto__ = obj.__sourceProto;\n\n    }\n    // TODO(sorvell): implement unpatching for non-proto patchable browsers\n  }\n\n};\n\nexport function patchNode(node) {\n  if (!utils.settings.inUse) {\n    return;\n  }\n  if (!isNodePatched(node) && patchImpl.canPatchNode(node)) {\n    tree.saveChildNodes(node);\n    patchImpl.patch(node);\n  }\n}\n\nexport function canUnpatchNode() {\n  return Boolean(patchImpl.hasPrototypeDescriptors);\n}\n\nexport function unpatchNode(node) {\n  patchImpl.unpatch(node);\n}\n\nexport function isNodePatched(node) {\n  return Boolean(node.__patched);\n}\n\n// TODO(sorvell): fake export\nutils.common.patchNode = patchNode;\nutils.common.canUnpatchNode = canUnpatchNode;\nutils.common.isNodePatched = isNodePatched;","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport * as utils from './utils'\n\nlet origAddEventListener = Element.prototype.addEventListener;\nlet origRemoveEventListener = Element.prototype.removeEventListener;\n\n// https://github.com/w3c/webcomponents/issues/513#issuecomment-224183937\nlet alwaysComposed = {\n  blur: true,\n  focus: true,\n  focusin: true,\n  focusout: true,\n  click: true,\n  dblclick: true,\n  mousedown: true,\n  mouseenter: true,\n  mouseleave: true,\n  mousemove: true,\n  mouseout: true,\n  mouseover: true,\n  mouseup: true,\n  wheel: true,\n  beforeinput: true,\n  input: true,\n  keydown: true,\n  keyup: true,\n  compositionstart: true,\n  compositionupdate: true,\n  compositionend: true,\n  touchstart: true,\n  touchend: true,\n  touchmove: true,\n  touchcancel: true,\n  pointerover: true,\n  pointerenter: true,\n  pointerdown: true,\n  pointermove: true,\n  pointerup: true,\n  pointercancel: true,\n  pointerout: true,\n  pointerleave: true,\n  gotpointercapture: true,\n  lostpointercapture: true,\n  dragstart: true,\n  drag: true,\n  dragenter: true,\n  dragleave: true,\n  dragover: true,\n  drop: true,\n  dragend: true,\n  DOMActivate: true,\n  DOMFocusIn: true,\n  DOMFocusOut: true,\n  keypress: true\n};\n\nfunction pathComposer(startNode, composed) {\n  let composedPath = [];\n  let current = startNode;\n  let startRoot = startNode === window ? window : startNode.getRootNode();\n  while (current) {\n    composedPath.push(current);\n    if (current.assignedSlot) {\n      current = current.assignedSlot;\n    } else if (current.nodeType === Node.DOCUMENT_FRAGMENT_NODE && current.host && (composed || current !== startRoot)) {\n      current = current.host;\n    } else {\n      current = current.parentNode;\n    }\n  }\n  // event composedPath includes window when startNode's ownerRoot is document\n  if (composedPath[composedPath.length - 1] === document) {\n    composedPath.push(window);\n  }\n  return composedPath;\n}\n\nfunction retarget(refNode, path) {\n  if (!utils.isShadyRoot) {\n    return refNode;\n  }\n  // If ANCESTOR's root is not a shadow root or ANCESTOR's root is BASE's\n  // shadow-including inclusive ancestor, return ANCESTOR.\n  let refNodePath = pathComposer(refNode, true);\n  let p$ = path;\n  for (let i=0, ancestor, lastRoot, root, rootIdx; i < p$.length; i++) {\n    ancestor = p$[i];\n    root = ancestor === window ? window : ancestor.getRootNode();\n    if (root !== lastRoot) {\n      rootIdx = refNodePath.indexOf(root);\n      lastRoot = root;\n    }\n    if (!utils.isShadyRoot(root) || rootIdx > -1) {\n      return ancestor;\n    }\n  }\n}\n\nlet EventMixin = {\n\n  __patched: 'Event',\n\n  get composed() {\n    if (this.isTrusted && this.__composed === undefined) {\n      this.__composed = alwaysComposed[this.type];\n    }\n    return this.__composed || false;\n  },\n\n  composedPath() {\n    if (!this.__composedPath) {\n      this.__composedPath = pathComposer(this.__target, this.composed);\n    }\n    return this.__composedPath;\n  },\n\n  get target() {\n    return retarget(this.currentTarget, this.composedPath());\n  },\n\n  // http://w3c.github.io/webcomponents/spec/shadow/#event-relatedtarget-retargeting\n  get relatedTarget() {\n    if (!this.__relatedTarget) {\n      return null;\n    }\n    if (!this.__relatedTargetComposedPath) {\n      this.__relatedTargetComposedPath = pathComposer(this.__relatedTarget, true);\n    }\n    // find the deepest node in relatedTarget composed path that is in the same root with the currentTarget\n    return retarget(this.currentTarget, this.__relatedTargetComposedPath);\n  },\n  stopPropagation() {\n    Event.prototype.stopPropagation.call(this);\n    this.__propagationStopped = true;\n  },\n  stopImmediatePropagation() {\n    Event.prototype.stopImmediatePropagation.call(this);\n    this.__immediatePropagationStopped = true;\n    this.__propagationStopped = true;\n  }\n\n};\n\nfunction mixinComposedFlag(Base) {\n  // NOTE: avoiding use of `class` here so that transpiled output does not\n  // try to do `Base.call` with a dom construtor.\n  let klazz = function(type, options) {\n    let event = new Base(type, options);\n    event.__composed = options && Boolean(options.composed);\n    return event;\n  }\n  // put constructor properties on subclass\n  utils.mixin(klazz, Base);\n  klazz.prototype = Base.prototype;\n  return klazz;\n}\n\nlet nonBubblingEventsToRetarget = {\n  focus: true,\n  blur: true\n};\n\nfunction fireHandlers(event, node, phase) {\n  let hs = node.__handlers && node.__handlers[event.type] &&\n    node.__handlers[event.type][phase];\n  if (hs) {\n    for (let i = 0, fn; (fn = hs[i]); i++) {\n      fn.call(node, event);\n      if (event.__immediatePropagationStopped) {\n        return;\n      }\n    }\n  }\n}\n\nfunction retargetNonBubblingEvent(e) {\n  let path = e.composedPath();\n  let node;\n  // override `currentTarget` to let patched `target` calculate correctly\n  Object.defineProperty(e, 'currentTarget', {\n    get: function() {\n      return node;\n    },\n    configurable: true\n  });\n  for (let i = path.length - 1; i >= 0; i--) {\n    node = path[i];\n    // capture phase fires all capture handlers\n    fireHandlers(e, node, 'capture');\n    if (e.__propagationStopped) {\n      return;\n    }\n  }\n\n  // set the event phase to `AT_TARGET` as in spec\n  Object.defineProperty(e, 'eventPhase', {value: Event.AT_TARGET});\n\n  // the event only needs to be fired when owner roots change when iterating the event path\n  // keep track of the last seen owner root\n  let lastFiredRoot;\n  for (let i = 0; i < path.length; i++) {\n    node = path[i];\n    if (i === 0 || (node.shadowRoot && node.shadowRoot === lastFiredRoot)) {\n      fireHandlers(e, node, 'bubble');\n      // don't bother with window, it doesn't have `getRootNode` and will be last in the path anyway\n      if (node !== window) {\n        lastFiredRoot = node.getRootNode();\n      }\n      if (e.__propagationStopped) {\n        return;\n      }\n    }\n  }\n}\n\nexport function addEventListener(type, fn, optionsOrCapture) {\n  if (!fn) {\n    return;\n  }\n\n  // The callback `fn` might be used for multiple nodes/events. Since we generate\n  // a wrapper function, we need to keep track of it when we remove the listener.\n  // It's more efficient to store the node/type/options information as Array in\n  // `fn` itself rather than the node (we assume that the same callback is used\n  // for few nodes at most, whereas a node will likely have many event listeners).\n  // NOTE(valdrin) invoking external functions is costly, inline has better perf.\n  let capture, once, passive;\n  if (typeof optionsOrCapture === 'object') {\n    capture = Boolean(optionsOrCapture.capture);\n    once = Boolean(optionsOrCapture.once);\n    passive = Boolean(optionsOrCapture.passive);\n  } else {\n    capture = Boolean(optionsOrCapture);\n    once = false;\n    passive = false;\n  }\n  if (fn.__eventWrappers) {\n    // Stop if the wrapper function has already been created.\n    for (let i = 0; i < fn.__eventWrappers.length; i++) {\n      if (fn.__eventWrappers[i].node === this &&\n          fn.__eventWrappers[i].type === type &&\n          fn.__eventWrappers[i].capture === capture &&\n          fn.__eventWrappers[i].once === once &&\n          fn.__eventWrappers[i].passive === passive) {\n        return;\n      }\n    }\n  } else {\n    fn.__eventWrappers = [];\n  }\n\n  const wrapperFn = function(e) {\n    // Support `once` option.\n    if (once) {\n      this.removeEventListener(type, fn, optionsOrCapture);\n    }\n    if (!e.__target) {\n      e.__target = e.target;\n      e.__relatedTarget = e.relatedTarget;\n      utils.patchPrototype(e, EventMixin);\n    }\n    // There are two critera that should stop events from firing on this node\n    // 1. the event is not composed and the current node is not in the same root as the target\n    // 2. when bubbling, if after retargeting, relatedTarget and target point to the same node\n    if (e.composed || e.composedPath().indexOf(this) > -1) {\n      if (e.eventPhase === Event.BUBBLING_PHASE) {\n        if (e.target === e.relatedTarget) {\n          e.stopImmediatePropagation();\n          return;\n        }\n      }\n      return fn(e);\n    }\n  };\n  // Store the wrapper information.\n  fn.__eventWrappers.push({\n    node: this,\n    type: type,\n    capture: capture,\n    once: once,\n    passive: passive,\n    wrapperFn: wrapperFn\n  });\n\n  if (nonBubblingEventsToRetarget[type]) {\n    this.__handlers = this.__handlers || {};\n    this.__handlers[type] = this.__handlers[type] || {capture: [], bubble: []};\n    this.__handlers[type][capture ? 'capture' : 'bubble'].push(wrapperFn);\n  } else {\n    origAddEventListener.call(this, type, wrapperFn, optionsOrCapture);\n  }\n}\n\nexport function removeEventListener(type, fn, optionsOrCapture) {\n  if (!fn) {\n    return;\n  }\n\n  // NOTE(valdrin) invoking external functions is costly, inline has better perf.\n  let capture, once, passive;\n  if (typeof optionsOrCapture === 'object') {\n    capture = Boolean(optionsOrCapture.capture);\n    once = Boolean(optionsOrCapture.once);\n    passive = Boolean(optionsOrCapture.passive);\n  } else {\n    capture = Boolean(optionsOrCapture);\n    once = false;\n    passive = false;\n  }\n  // Search the wrapped function.\n  let wrapperFn = undefined;\n  if (fn.__eventWrappers) {\n    for (let i = 0; i < fn.__eventWrappers.length; i++) {\n      if (fn.__eventWrappers[i].node === this &&\n          fn.__eventWrappers[i].type === type &&\n          fn.__eventWrappers[i].capture === capture &&\n          fn.__eventWrappers[i].once === once &&\n          fn.__eventWrappers[i].passive === passive) {\n        wrapperFn = fn.__eventWrappers.splice(i, 1)[0].wrapperFn;\n        // Cleanup.\n        if (!fn.__eventWrappers.length) {\n          fn.__eventWrappers = undefined;\n        }\n        break;\n      }\n    }\n  }\n\n  origRemoveEventListener.call(this, type, wrapperFn || fn, optionsOrCapture);\n  if (wrapperFn && nonBubblingEventsToRetarget[type] &&\n      this.__handlers && this.__handlers[type]) {\n    const arr = this.__handlers[type][capture ? 'capture' : 'bubble'];\n    const idx = arr.indexOf(wrapperFn);\n    if (idx > -1) {\n      arr.splice(idx, 1);\n    }\n  }\n}\n\nexport function activateFocusEventOverrides() {\n  for (let ev in nonBubblingEventsToRetarget) {\n    window.addEventListener(ev, function(e) {\n      if (!e.__target) {\n        e.__target = e.target;\n        e.__relatedTarget = e.relatedTarget;\n        utils.patchPrototype(e, EventMixin);\n        retargetNonBubblingEvent(e);\n        e.stopImmediatePropagation();\n      }\n    }, true);\n  }\n}\n\nexport let OriginalEvent = Event;\nexport let PatchedEvent = mixinComposedFlag(Event);\nexport let PatchedCustomEvent = mixinComposedFlag(CustomEvent);\nexport let PatchedMouseEvent = mixinComposedFlag(MouseEvent);\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Patches elements that interacts with ShadyDOM\n * such that tree traversal and mutation apis act like they would under\n * ShadowDOM.\n *\n * This import enables seemless interaction with ShadyDOM powered\n * custom elements, enabling better interoperation with 3rd party code,\n * libraries, and frameworks that use DOM tree manipulation apis.\n */\n\n'use strict';\nimport * as utils from './utils'\nimport {ShadyRoot, flush, enqueue} from './shady'\nimport * as patch from './patch'\nimport {getRootNode, filterMutations, observeChildren, unobserveChildren,\n  setAttribute, getComposedInnerHTML, getComposedChildNodes} from './element-mixin'\nimport * as events from './event-mixin'\nimport {tree, getNativeProperty} from './tree'\n\nif (utils.settings.inUse) {\n\n  window.ShadyDOM = {\n    tree: tree,\n    getNativeProperty: getNativeProperty,\n    patch: patch.patchNode,\n    isPatched: patch.isNodePatched,\n    getComposedInnerHTML: getComposedInnerHTML,\n    getComposedChildNodes: getComposedChildNodes,\n    unpatch: patch.unpatchNode,\n    canUnpatch: patch.canUnpatchNode,\n    isShadyRoot: utils.isShadyRoot,\n    enqueue: enqueue,\n    flush: flush,\n    inUse: utils.settings.inUse,\n    filterMutations: filterMutations,\n    observeChildren: observeChildren,\n    unobserveChildren: unobserveChildren\n  };\n\n  let createRootAndEnsurePatched = function(node) {\n    // TODO(sorvell): need to ensure ancestors are patched but this introduces\n    // a timing problem with gathering composed children.\n    // (1) currently the child list is crawled and patched when patching occurs\n    // (this needs to change)\n    // (2) we can only patch when an element has received its parsed children\n    // because we cannot detect them when inserted by parser.\n    // let ancestor = node;\n    // while (ancestor) {\n    //   patchNode(ancestor);\n    //   ancestor = ancestor.parentNode || ancestor.host;\n    // }\n    patch.patchNode(node);\n    let root = new ShadyRoot(node);\n    patch.patchNode(root);\n    return root;\n  }\n\n  Element.prototype.attachShadow = function() {\n    return createRootAndEnsurePatched(this);\n  }\n\n  Node.prototype.addEventListener = events.addEventListener;\n  Node.prototype.removeEventListener = events.removeEventListener;\n  Event = events.PatchedEvent;\n  CustomEvent = events.PatchedCustomEvent;\n  MouseEvent = events.PatchedMouseEvent;\n  events.activateFocusEventOverrides();\n\n  Object.defineProperty(Node.prototype, 'isConnected', {\n    get() {\n      return document.documentElement.contains(this);\n    },\n    configurable: true\n  });\n\n  Node.prototype.getRootNode = function(options) {\n    return getRootNode(this, options);\n  }\n\n  Object.defineProperty(Element.prototype, 'slot', {\n    get() {\n      return this.getAttribute('slot');\n    },\n    set(value) {\n      this.setAttribute('slot', value);\n    },\n    configurable: true\n  });\n\n  Object.defineProperty(Node.prototype, 'assignedSlot', {\n    get() {\n      return this._assignedSlot || null;\n    },\n    configurable: true\n  });\n\n  let nativeSetAttribute = Element.prototype.setAttribute;\n  Element.prototype.setAttribute = setAttribute;\n  // NOTE: expose native setAttribute to allow hooking native method\n  // (e.g. this is done in ShadyCSS)\n  Element.prototype.__nativeSetAttribute = nativeSetAttribute;\n\n  let classNameDescriptor = {\n    get() {\n      return this.getAttribute('class');\n    },\n    set(value) {\n      this.setAttribute('class', value);\n    },\n    configurable: true\n  };\n\n  // Safari 9 `className` is not configurable\n  let cn = Object.getOwnPropertyDescriptor(Element.prototype, 'className');\n  if (cn && cn.configurable) {\n    Object.defineProperty(Element.prototype, 'className', classNameDescriptor);\n  } else {\n    // on IE `className` is on Element\n    let h = window.customElements && window.customElements.nativeHTMLElement ||\n      HTMLElement;\n    cn = Object.getOwnPropertyDescriptor(h.prototype, 'className');\n    if (cn && cn.configurable) {\n      Object.defineProperty(h.prototype, 'className', classNameDescriptor);\n    }\n  }\n}\n"],"names":["let","const","i","j","this","utils.common","p","parent","node","c","s","n","utils.extend","utils.promish","flush","utils.isShadyRoot","isShadyRoot","nativeSetAttribute","utils.matchesSelector","utils.extendAll","getComposedChildNodes","utils.patchPrototype","utils.settings","utils.mixin","patch.patchNode","patch.isNodePatched","patch.unpatchNode","patch.canUnpatchNode","events.addEventListener","events.removeEventListener","events.PatchedEvent","events.PatchedCustomEvent","events.PatchedMouseEvent","events.activateFocusEventOverrides"],"mappings":"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","sourceRoot":"/source/"}